plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'com.google.dagger.hilt.android'
    id "androidx.navigation.safeargs.kotlin"

}

// Read credentials
def credentialFile = rootProject.file("credentials.properties")
def credentialProperty = new Properties()
credentialProperty.load(new FileInputStream(credentialFile))

android {
    namespace 'me.aminsaid.data'
    compileSdk 34

    buildFeatures {
        buildConfig true
    }

    defaultConfig {
        minSdk 24
        targetSdk 34

        buildConfigField("String", "BASE_URL", credentialProperty['BASE_URL'])
        buildConfigField("String", "API_KEY", credentialProperty['API_KEY'])

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation project(path: ':core')
    implementation project(path: ':feature:weatherForecast')
    implementation project(path: ':feature:weatherCurrent')
    implementation project(path: ':feature:cityInput')
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    //DataStore
    implementation "androidx.datastore:datastore-preferences:1.1.0-alpha05"
    implementation 'androidx.test:rules:1.5.0'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.5'
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.5'

    // Hilt
    implementation "com.google.dagger:hilt-android:2.47"
    kapt "com.google.dagger:hilt-compiler:2.44"
    kapt "androidx.hilt:hilt-compiler:1.0.0"

    // Unit test
    testImplementation 'junit:junit:4.13.2'
    testImplementation "io.mockk:mockk:1.13.8"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.2'
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:1.8.0"
    testImplementation 'org.robolectric:robolectric:4.6.1'
    testImplementation "org.mockito.kotlin:mockito-kotlin:3.2.0"
    testImplementation "org.mockito:mockito-core:5.4.0"
    testImplementation "org.robolectric:robolectric:4.6.1"
    testImplementation "com.google.truth:truth:1.1.3"
    testImplementation 'androidx.arch.core:core-testing:2.2.0'

    // UI test
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    debugImplementation 'com.google.dagger:hilt-android-testing:2.44'
    kaptTest 'com.google.dagger:hilt-android-compiler:2.44'
    debugImplementation 'org.mockito:mockito-android:5.4.0'
    debugImplementation "org.mockito:mockito-junit-jupiter:3.11.2"
    debugImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.2'
    debugImplementation 'androidx.fragment:fragment-testing:1.6.1'
    debugImplementation "androidx.navigation:navigation-testing:2.7.3"
    androidTestImplementation('androidx.test.espresso:espresso-core:3.5.1') {
        exclude group: 'org.robolectric'
    }


}